"\"\"\"\nAll queries of users system\n\"\"\"\ntype UserQuery{\n\t\"\"\"\n\tLog user in\n\t\"\"\"\n\tlogin(\n\t\tuser: UserBasicData!\n\t): LoggedInData\n\t\"\"\"\n\tCheck if logged in user is admin<br>\n\t\"\"\"\n\tisAdmin: Boolean\n\t\"\"\"\n\tCheck if there is admin already\n\t\"\"\"\n\tisAdminClaimPossible: Boolean\n}\n\n\"\"\"\nAll mutations of users system\n\"\"\"\ntype UserMutation{\n\t\"\"\"\n\tMake user a superadmin on a first call. Then you need to be an admin to call this\n\t\"\"\"\n\tmakeAdmin(\n\t\t\"\"\"\n\t\tusername of admin user<br>\n\t\t\"\"\"\n\t\tusername: String!\n\t): Boolean\n\t\"\"\"\n\tRegister a new user<br>\n\t\"\"\"\n\tregister(\n\t\tuser: UserBasicData!\n\t): LoggedInData\n}\n\ntype LoggedInData{\n\ttoken: String\n}\n\ninput UserBasicData{\n\tusername: String!\n\tpassword: String!\n}\n\ninput NewInput{\n\thello: String!\n\tbye: String!\n}\n\ndirective @aws_api_key on FIELD_DEFINITION | OBJECT\n\ndirective @aws_iam on FIELD_DEFINITION | OBJECT\n\ndirective @aws_oidc on FIELD_DEFINITION | OBJECT\n\ndirective @aws_lambda on FIELD_DEFINITION | OBJECT\n\ndirective @aws_cognito_user_pools(\n\tcognito_groups: [String!]\n) on FIELD_DEFINITION | OBJECT\n\ndirective @aws_auth(\n\tcognito_groups: [String!]!\n) on FIELD_DEFINITION\n\ndirective @aws_subscribe(\n\tmutations: [String!]\n) on FIELD_DEFINITION\n\ndirective @key(\n\tname: String\n\tfields: [String!]!\n\tqueryField: String\n) on OBJECT\n\ndirective @default(\n\tvalue: String\n) on FIELD_DEFINITION\n\n\"\"\"\nname\n\"\"\"\ntype user\n\ninput userInput\n"