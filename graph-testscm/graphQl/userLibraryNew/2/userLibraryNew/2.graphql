"\"\"\"\nAll queries of users system\n\"\"\"\ntype UserQuery{\n\t\"\"\"\n\tLog user in\n\t\"\"\"\n\tlogin(\n\t\tuser: UserBasicData!\n\t): LoggedInData\n\t\"\"\"\n\tCheck if logged in user is admin<br>\n\t\"\"\"\n\tisAdmin: Boolean\n\t\"\"\"\n\tCheck if there is admin already\n\t\"\"\"\n\tisAdminClaimPossible: Boolean\n}\n\n\"\"\"\nAll mutations of users system\n\"\"\"\ntype UserMutation{\n\t\"\"\"\n\tMake user a superadmin on a first call. Then you need to be an admin to call this\n\t\"\"\"\n\tmakeAdmin(\n\t\t\"\"\"\n\t\tusername of admin user<br>\n\t\t\"\"\"\n\t\tusername: String!\n\t): Boolean\n\t\"\"\"\n\tRegister a new user<br>\n\t\"\"\"\n\tregister(\n\t\tuser: UserBasicData!\n\t): LoggedInData\n}\n\ntype LoggedInData{\n\ttoken: String\n}\n\ninput UserBasicData{\n\tusername: String!\n\tpassword: String!\n}\n\ninput NewInput {\n\thello: String!\n\tbye: String!\n}\n\ndirective @aws_api_key on FIELD_DEFINITION | OBJECT\ndirective @aws_iam on FIELD_DEFINITION | OBJECT\ndirective @aws_oidc on FIELD_DEFINITION | OBJECT\ndirective @aws_lambda on FIELD_DEFINITION | OBJECT\ndirective @aws_cognito_user_pools(cognito_groups: [String!]) on FIELD_DEFINITION | OBJECT\ndirective @aws_auth(cognito_groups: [String!]!) on FIELD_DEFINITION\ndirective @aws_subscribe(mutations: [String!]) on FIELD_DEFINITION\ndirective @key(name: String, fields: [String!]!, queryField: String) repeatable on OBJECT\ndirective @default(value: String) on FIELD_DEFINITION"